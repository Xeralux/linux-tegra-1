/*
 * imx274_mode_tbls.h - imx274 sensor mode tables
 *
 * Copyright (c) 2016-2017, NVIDIA CORPORATION, All Rights Reserved.
 * Copyright (c) 2016, Leopard Imaging, Inc, All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef __IMX274_TABLES__
#define __IMX274_TABLES__

#include <media/camera_common.h>

#define IMX274_TABLE_WAIT_MS	0
#define IMX274_TABLE_END	1
#define IMX274_MAX_RETRIES	3

#define imx274_reg struct reg_8

struct imx274_reg_struct {
	u16 addr;
	u8  shift;
	u8 bits;
	u32 val;
};

struct imx274_reg_struct imx274_mode_1920x1080_60fps_reg[] = {
	{0x3000,  0,  1,       0x1},
	{0x3000,  1,  1,       0x0},
	{0x3000,  3,  1,       0x0},
	{0x3000,  4,  1,       0x0},
	{0x3001,  4,  1,       0x1},
	{0x3004,  0,  8,       0x0},
	{0x3005,  0,  8,       0x7},
	{0x3006,  0,  8,       0x0},
	{0x3007,  0,  8,       0x2},
	{0x3008,  0,  1,       0x0},
	{0x300a,  0, 11,       0x0},
	{0x300c,  0, 16,       0xff},
	{0x300e,  0, 16,       0x0},
	{0x3010,  0, 16,       0x0},
	{0x3012,  0,  4,       0x0},
	{0x3018,  0,  2,       0x3},
	{0x3018,  2,  6,      0x28},
	{0x301a,  0,  1,       0x0},
	{0x302d,  0,  1,       0x0},
	{0x3037,  0,  1,       0x0},
	{0x3038,  0, 13,       0x0},
	{0x303a,  0, 13,       0x0},
	{0x303e,  0,  2,       0x2},
	{0x3045,  0,  8,      0x32},
	{0x304c,  0,  8,       0x0},
	{0x304d,  0,  2,       0x3},
	{0x30dd,  0,  1,       0x0},
	{0x30e2,  0,  8,       0x0},
	{0x30ee,  0,  8,       0x1},
	{0x30f4,  0,  1,       0x0},
	{0x30f6,  0, 16,     0x1ed},
	{0x30f8,  0, 20,    0x1308},
	{0x310b,  0,  1,       0x0},
	{0x310b,  4,  1,       0x0},
	{0x3111,  0,  1,       0x0},

	{0x3120,  0, 16,      0x00f0}, // pll 24Mhz input
	{0x3122,  0,  8,       0x2},
	{0x3123,  0,  2,       0x0},
	{0x3129,  0,  8,      0x9c},
	{0x312a,  0,  8,       0x2},
	{0x312d,  0,  8,       0x2},

	{0x3130,  0, 13,     0x8aa},
	{0x3132,  0, 13,     0x89a},
	{0x3304,  0, 16,       0x32},
	{0x3306,  0, 16,       0x32},
	{0x331c,  0, 16,      0x1a},
	{0x3342,  0, 16,     0x1ff},
	{0x3344,  0, 16,     0x1ff},
	{0x3502,  0,  8,       0x2},
	{0x3528,  0,  8,       0xf},
	{0x3529,  0,  8,       0xe},
	{0x352a,  0,  8,       0xe},
	{0x352b,  0,  8,       0xe},
	{0x3538,  0,  8,       0xe},
	{0x3539,  0,  8,       0xe},
	{0x3553,  0,  5,       0x0},
	{0x3554,  0,  5,       0x0},
	{0x3555,  0,  5,       0x0},
	{0x3556,  0,  5,       0x0},
	{0x3557,  0,  5,       0x0},
	{0x3558,  0,  5,       0x0},
	{0x3559,  0,  5,      0x1f},
	{0x355a,  0,  5,      0x1f},
	{0x357d,  0,  5,       0x5},
	{0x357f,  0,  5,       0x5},
	{0x3581,  0,  5,       0x4},
	{0x3583,  0,  8,      0x76},
	{0x3587,  0,  8,       0x1},
	{0x3590,  0, 16,       0x32},
	{0x35ba,  0,  8,       0xf},
	{0x35bb,  0,  8,       0xe},
	{0x35bc,  0,  8,       0xe},
	{0x35bd,  0,  8,       0xe},
	{0x35be,  0,  8,       0xe},
	{0x35bf,  0,  8,       0xe},
	{0x366a,  0,  5,       0x0},
	{0x366b,  0,  5,       0x0},
	{0x366c,  0,  5,       0x0},
	{0x366d,  0,  5,       0x0},
	{0x366e,  0,  5,       0x0},
	{0x366f,  0,  5,       0x0},
	{0x3670,  0,  5,       0x0},
	{0x3671,  0,  5,       0x0},
	{0x3686,  0, 16,       0x32},
	{0x3a41,  0,  6,      0x10},
	{0x3a3b,  0,  8,       0x01},
	{0x3ac4,  0,  1,       0x0},
	{0x3a54,  0, 13,     0xf18},
	{0x3a43,  0,  1,       0x01},
	{0x306b,  0,  8,       0x7},
	{0x33a6,  0,  8,       0x1},

	#ifdef TEST_PATTERN
	{0x303C, 0x11},
	{0x303D, 0x0A}, // color bar
	//{0x303D, 0, 8, 0x03}, // gray image
	{0x370E, 0, 8, 0x01},
	{0x377F, 0, 8, 0x01},
	{0x3781, 0, 8, 0x01},
	{0x370B, 0, 8, 0x11}, // enable
#endif

	{0x300A, 0, 11, 0x1A0}, // PGC gain

	{IMX274_TABLE_WAIT_MS, 0, 0, 20 }, // sleep 20ms
	{0x3000, 0, 5, 0x00},
	{0x303E, 0, 2, 0x02},

	{IMX274_TABLE_WAIT_MS, 0, 0, 20 }, // sleep 20ms
	{0x30F4, 0, 1, 0x00},
	{0x3018, 0, 2, 0x02},

	{IMX274_TABLE_WAIT_MS, 0, 0, 20 }, // sleep 20ms
	{IMX274_TABLE_END, 0, 0, 0}
};

// for SVR, HMAX & VMAX, refer to page 64 of the datasheet
static const imx274_reg imx274_mode0_3840x2160_raw12[] = {
	{0x3004, 0x00},
	{0x3005, 0x07},
	{0x3006, 0x00},
	{0x3007, 0x02},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x00}, // SVR , 0
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x07},
	{0x30E2, 0x00},
	{0x30F6, 0xED}, // HMAX , 493
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0x08}, // VMAX , 4872
	{0x30F9, 0x13}, // VMAX
	{0x30FA, 0x00}, // VMAX
	{0x30EE, 0x01},
	{0x3130, 0xAA},
	{0x3131, 0x08},
	{0x3132, 0x9A},
	{0x3133, 0x08},
	{0x3342, 0xFF},
	{0x3343, 0x01},
	{0x3344, 0xFF},
	{0x3345, 0x01},
	{0x33A6, 0x01},
	{0x3528, 0x0F},
	{0x3554, 0x00},
	{0x3555, 0x00},
	{0x3556, 0x00},
	{0x3557, 0x00},
	{0x3558, 0x00},
	{0x3559, 0x1F},
	{0x355A, 0x1F},
	{0x35BA, 0x0F},
	{0x366A, 0x00},
	{0x366B, 0x00},
	{0x366C, 0x00},
	{0x366D, 0x00},
	{0x3A41, 0x10},

	{IMX274_TABLE_END, 0x00}
};

// raw 10, mode 1
static const imx274_reg imx274_mode1_1920x1080_raw10_crop[] = {
	{0x3004, 0x01},
	{0x3005, 0x01},
	{0x3006, 0x00},
	{0x3007, 0x02},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x00}, // SVR , 0
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x05},
	{0x30E2, 0x01},
	{0x30F6, 0x07}, // HMAX , 263
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0xC6}, // VMAX , 4550
	{0x30F9, 0x11}, // VMAX
	{0x30FA, 0x00}, // VMAX

	{0x30dd, 0x01}, // crop to 2160
	{0x30de, 0x0c},
	{0x30df, 0x02},
	{0x30e0, 0x06},
	{0x30e1, 0x00},
	{0x3037, 0x01}, // to crop to 3840
	{0x3038, 0x0c},
	{0x3039, 0x00},
	{0x303a, 0x8c},
	{0x303b, 0x07},

	{0x30EE, 0x01},
	{0x3130, 0x4e},
	{0x3131, 0x04},
	{0x3132, 0x46},
	{0x3133, 0x04},
	{0x3342, 0x0A},
	{0x3343, 0x00},
	{0x3344, 0x16},
	{0x3345, 0x00},
	{0x33A6, 0x01},
	{0x3528, 0x0E},
	{0x3554, 0x1F},
	{0x3555, 0x01},
	{0x3556, 0x01},
	{0x3557, 0x01},
	{0x3558, 0x01},
	{0x3559, 0x00},
	{0x355A, 0x00},
	{0x35BA, 0x0E},
	{0x366A, 0x1B},
	{0x366B, 0x1A},
	{0x366C, 0x19},
	{0x366D, 0x17},
	{0x3A41, 0x08},

	{IMX274_TABLE_END, 0x00}
};

// for SVR, HMAX & VMAX, refer to page 64 of the datasheet
// raw 12, mode 2
static const imx274_reg imx274_mode2_1920x1080_raw12[] = {
	{0x3004, 0x02},
	{0x3005, 0x27},
	{0x3006, 0x00},
	{0x3007, 0x11},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x00}, // SVR , 0
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x07},
	{0x30E2, 0x02},
	{0x30F6, 0xED}, // HMAX , 493
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0x84}, // VMAX , 2436
	{0x30F9, 0x09}, // VMAX
	{0x30FA, 0x00}, // VMAX
	{0x30EE, 0x01},
	{0x3130, 0x4E},
	{0x3131, 0x04},
	{0x3132, 0x46},
	{0x3133, 0x04},
	{0x3342, 0xFF},
	{0x3343, 0x01},
	{0x3344, 0xFF},
	{0x3345, 0x01},
	{0x33A6, 0x01},
	{0x3528, 0x0F},
	{0x3554, 0x00},
	{0x3555, 0x00},
	{0x3556, 0x00},
	{0x3557, 0x00},
	{0x3558, 0x00},
	{0x3559, 0x1F},
	{0x355A, 0x1F},
	{0x35BA, 0x0F},
	{0x366A, 0x00},
	{0x366B, 0x00},
	{0x366C, 0x00},
	{0x366D, 0x00},
	{0x3A41, 0x08},

	{IMX274_TABLE_END, 0x00}
};

// raw 10, mode 3
static const imx274_reg imx274_mode3_1920x1080_raw10[] = {
	{0x3004, 0x02},
	{0x3005, 0x21},
	{0x3006, 0x00},
	{0x3007, 0x11},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x00},//0x01}, // SVR , 1, reduce from 120fps to 60fps
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x05},
	{0x30E2, 0x02},

	{0x30F6, 0x04}, // HMAX , 260
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0x06}, // VMAX , 2310
	{0x30F9, 0x09}, // VMAX
	{0x30FA, 0x00}, // VMAX

	{0x30dd, 0x01}, // to crop to 1920x1080
	{0x30de, 0x07},
	{0x30df, 0x00},
	{0x30e0, 0x06},
	{0x30e1, 0x00},
	{0x3037, 0x01},
	{0x3038, 0x0c},
	{0x3039, 0x00},
	{0x303a, 0x0c},
	{0x303b, 0x0f},

	{0x30EE, 0x01},
	{0x3130, 0x4E},
	{0x3131, 0x04},
	{0x3132, 0x46},
	{0x3133, 0x04},
	{0x3342, 0x0A},
	{0x3343, 0x00},
	{0x3344, 0x1A},
	{0x3345, 0x00},
	{0x33A6, 0x00},
	{0x3528, 0x0E},
	{0x3554, 0x00},
	{0x3555, 0x01},
	{0x3556, 0x01},
	{0x3557, 0x01},
	{0x3558, 0x01},
	{0x3559, 0x00},
	{0x355A, 0x00},
	{0x35BA, 0x0E},
	{0x366A, 0x1B},
	{0x366B, 0x1A},
	{0x366C, 0x19},
	{0x366D, 0x17},
	{0x3A41, 0x08},

	{IMX274_TABLE_END, 0x00}
};

// raw 10, mode 1
static const imx274_reg imx274_mode1_3840x2160_raw10[] = {
	{0x3004, 0x01},
	{0x3005, 0x01},
	{0x3006, 0x00},
	{0x3007, 0x02},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x00}, // SVR , 0
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x05},
	{0x30E2, 0x01},
	{0x30F6, 0x07}, // HMAX , 263
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0xC6}, // VMAX , 4550
	{0x30F9, 0x11}, // VMAX
	{0x30FA, 0x00}, // VMAX

	{0x30dd, 0x01}, // crop to 2160
	{0x30de, 0x07},
	{0x30df, 0x00},
	{0x30e0, 0x06},
	{0x30e1, 0x00},
	{0x3037, 0x01}, // to crop to 3840
	{0x3038, 0x0c},
	{0x3039, 0x00},
	{0x303a, 0x0c},
	{0x303b, 0x0f},

	{0x30EE, 0x01},
	{0x3130, 0x86},
	{0x3131, 0x08},
	{0x3132, 0x7E},
	{0x3133, 0x08},
	{0x3342, 0x0A},
	{0x3343, 0x00},
	{0x3344, 0x16},
	{0x3345, 0x00},
	{0x33A6, 0x01},
	{0x3528, 0x0E},
	{0x3554, 0x1F},
	{0x3555, 0x01},
	{0x3556, 0x01},
	{0x3557, 0x01},
	{0x3558, 0x01},
	{0x3559, 0x00},
	{0x355A, 0x00},
	{0x35BA, 0x0E},
	{0x366A, 0x1B},
	{0x366B, 0x1A},
	{0x366C, 0x19},
	{0x366D, 0x17},
	{0x3A41, 0x08},

	{IMX274_TABLE_END, 0x00}
};



// raw 10, mode 4
static const imx274_reg imx274_mode4_1920x1080_raw10[] = {
	{0x3004, 0x02},
	{0x3005, 0x61},
	{0x3006, 0x00},
	{0x3007, 0x19},
	{0x300C, 0xff}, // SHR
	{0x300D, 0x00}, // SHR
	{0x300E, 0x03}, // SVR , 3
	{0x300F, 0x00}, // SVR
	{0x3018, 0xA2}, // output XVS, HVS
	{0x301A, 0x00},
	{0x306B, 0x05},
	{0x30E2, 0x02},

	{0x30F6, 0x04}, // HMAX , 260
	{0x30F7, 0x01}, // HMAX
	{0x30F8, 0x06}, // VMAX , 2310
	{0x30F9, 0x09}, // VMAX
	{0x30FA, 0x00}, // VMAX

	{0x30EE, 0x01},
	{0x3130, 0x4E},
	{0x3131, 0x04},
	{0x3132, 0x46},
	{0x3133, 0x04},
	{0x3342, 0x0A},
	{0x3343, 0x00},
	{0x3344, 0x1B},
	{0x3345, 0x00},
	{0x33A6, 0x00},
	{0x3528, 0x0E},
	{0x3554, 0x00},
	{0x3555, 0x01},
	{0x3556, 0x01},
	{0x3557, 0x01},
	{0x3558, 0x01},
	{0x3559, 0x00},
	{0x355A, 0x00},
	{0x35BA, 0x0E},
	{0x366A, 0x1B},
	{0x366B, 0x19},
	{0x366C, 0x17},
	{0x366D, 0x17},
	{0x3A41, 0x08},

	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_start_1[] = {
	{IMX274_STANDBY_REG, 0x12},
	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_start_2[] = {
	{0x3120, 0xF0}, // clock settings
	{0x3121, 0x00}, // clock settings
	{0x3122, 0x02}, // clock settings
	{0x3129, 0x9C}, // clock settings
	{0x312A, 0x02}, // clock settings
	{0x312D, 0x02}, // clock settings

	{0x310B, 0x00},

	// PLSTMG
	{0x304C, 0x00}, // PLSTMG01
	{0x304D, 0x03},
	{0x331C, 0x1A},
	{0x331D, 0x00},
	{0x3502, 0x02},
	{0x3529, 0x0E},
	{0x352A, 0x0E},
	{0x352B, 0x0E},
	{0x3538, 0x0E},
	{0x3539, 0x0E},
	{0x3553, 0x00},
	{0x357D, 0x05},
	{0x357F, 0x05},
	{0x3581, 0x04},
	{0x3583, 0x76},
	{0x3587, 0x01},
	{0x35BB, 0x0E},
	{0x35BC, 0x0E},
	{0x35BD, 0x0E},
	{0x35BE, 0x0E},
	{0x35BF, 0x0E},
	{0x366E, 0x00},
	{0x366F, 0x00},
	{0x3670, 0x00},
	{0x3671, 0x00},

	// PSMIPI
	{0x3304, 0x32}, // PSMIPI1
	{0x3305, 0x00},
	{0x3306, 0x32},
	{0x3307, 0x00},
	{0x3590, 0x32},
	{0x3591, 0x00},
	{0x3686, 0x32},
	{0x3687, 0x00},

#ifdef TEST_PATTERN
	{0x303C, 0x11},
	//{0x303D, 0x0A}, // color bar
	{0x303D, 0x03}, // gray image
	{0x370E, 0x01},
	{0x377F, 0x01},
	{0x3781, 0x01},
	{0x370B, 0x11}, // enable
#endif
	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_start_3[] = {
	{IMX274_STANDBY_REG, 0x00},
	{0x303E, 0x02}, // SYS_MODE = 2
	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_start_4[] = {
	{0x30F4, 0x00},
	{0x3018, 0xA2}, // XHS VHS OUTUPT
	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_stop[] = {
	{IMX274_STANDBY_REG, 0x01},
	{IMX274_TABLE_END, 0x00}
};

static const imx274_reg imx274_2_lane_conf[] = {
	{0x312E, 0x01},
	{0x3AA2, 0x01},
	{IMX274_TABLE_END, 0x00}
};

enum {
	IMX274_MODE_1920X1080,
	IMX274_MODE_3840X2160,

	IMX274_MODE_START_STREAM_1,
	IMX274_MODE_START_STREAM_2,
	IMX274_MODE_START_STREAM_3,
	IMX274_MODE_START_STREAM_4,
	IMX274_MODE_STOP_STREAM,
	IMX274_MODE_2_LANE_MIPI
};

static const imx274_reg *mode_table[] = {
	[IMX274_MODE_1920X1080] 		= imx274_mode3_1920x1080_raw10,
	[IMX274_MODE_3840X2160] 		= imx274_mode1_3840x2160_raw10,

	[IMX274_MODE_START_STREAM_1]		= imx274_start_1,
	[IMX274_MODE_START_STREAM_2]		= imx274_start_2,
	[IMX274_MODE_START_STREAM_3]		= imx274_start_3,
	[IMX274_MODE_START_STREAM_4]		= imx274_start_4,
	[IMX274_MODE_STOP_STREAM]			= imx274_stop,
	[IMX274_MODE_2_LANE_MIPI]			= imx274_2_lane_conf,
	//[IMX274_MODE_TEST_PATTERN]		= tp_colorbars,
};

static const int imx274_60fps[] = {
	60,
};

static const struct camera_common_frmfmt imx274_frmfmt[] = {
	{{1920, 1080},	imx274_60fps, 1, 0, IMX274_MODE_1920X1080},
	{{3840, 2160},	imx274_60fps, 1, 0, IMX274_MODE_3840X2160},
};
#endif  /* __IMX274_TABLES__ */

